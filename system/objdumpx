
test：     文件格式 elf64-x86-64
test
体系结构：i386:x86-64，标志 0x00000150：
HAS_SYMS, DYNAMIC, D_PAGED
起始地址 0x0000000000000560

程序头：
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x00000000000008b8 memsz 0x00000000000008b8 flags r-x
    LOAD off    0x0000000000000db8 vaddr 0x0000000000200db8 paddr 0x0000000000200db8 align 2**21
         filesz 0x0000000000000278 memsz 0x0000000000000280 flags rw-
 DYNAMIC off    0x0000000000000dc8 vaddr 0x0000000000200dc8 paddr 0x0000000000200dc8 align 2**3
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000748 vaddr 0x0000000000000748 paddr 0x0000000000000748 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000db8 vaddr 0x0000000000200db8 paddr 0x0000000000200db8 align 2**0
         filesz 0x0000000000000248 memsz 0x0000000000000248 flags r--

动态节：
  NEEDED               libstdc++.so.6
  NEEDED               libm.so.6
  NEEDED               libgcc_s.so.1
  NEEDED               libc.so.6
  INIT                 0x0000000000000518
  FINI                 0x0000000000000734
  INIT_ARRAY           0x0000000000200db8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200dc0
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000360
  SYMTAB               0x00000000000002b8
  STRSZ                0x00000000000000ab
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000201000
  PLTRELSZ             0x0000000000000018
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000500
  RELA                 0x0000000000000440
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  VERNEED              0x0000000000000420
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x000000000000040c
  RELACOUNT            0x0000000000000003

版本引用：
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

节：
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000a8  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       000000ab  0000000000000360  0000000000000360  00000360  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000e  000000000000040c  000000000000040c  0000040c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000000420  0000000000000420  00000420  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  0000000000000440  0000000000000440  00000440  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000018  0000000000000500  0000000000000500  00000500  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000000518  0000000000000518  00000518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  0000000000000530  0000000000000530  00000530  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000000550  0000000000000550  00000550  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001d2  0000000000000560  0000000000000560  00000560  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000000734  0000000000000734  00000734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000008  0000000000000740  0000000000000740  00000740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000044  0000000000000748  0000000000000748  00000748  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000128  0000000000000790  0000000000000790  00000790  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000200db8  0000000000200db8  00000db8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000200dc0  0000000000200dc0  00000dc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000210  0000000000200dc8  0000000000200dc8  00000dc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000028  0000000000200fd8  0000000000200fd8  00000fd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000020  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000201020  0000000000201020  00001020  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000008  0000000000201030  0000000000201030  00001030  2**0
                  ALLOC
 25 .comment      0000001d  0000000000000000  0000000000000000  00001030  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000030  0000000000000000  0000000000000000  0000104d  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   00000358  0000000000000000  0000000000000000  0000107d  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 00000105  0000000000000000  0000000000000000  000013d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   000000d8  0000000000000000  0000000000000000  000014da  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    00000285  0000000000000000  0000000000000000  000015b2  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000360 l    d  .dynstr	0000000000000000              .dynstr
000000000000040c l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000420 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000440 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000500 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000000518 l    d  .init	0000000000000000              .init
0000000000000530 l    d  .plt	0000000000000000              .plt
0000000000000550 l    d  .plt.got	0000000000000000              .plt.got
0000000000000560 l    d  .text	0000000000000000              .text
0000000000000734 l    d  .fini	0000000000000000              .fini
0000000000000740 l    d  .rodata	0000000000000000              .rodata
0000000000000748 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000000790 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200db8 l    d  .init_array	0000000000000000              .init_array
0000000000200dc0 l    d  .fini_array	0000000000000000              .fini_array
0000000000200dc8 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fd8 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .got.plt	0000000000000000              .got.plt
0000000000201020 l    d  .data	0000000000000000              .data
0000000000201030 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000590 l     F .text	0000000000000000              deregister_tm_clones
00000000000005d0 l     F .text	0000000000000000              register_tm_clones
0000000000000620 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201030 l     O .bss	0000000000000001              completed.7090
0000000000200dc0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000000660 l     F .text	0000000000000000              frame_dummy
0000000000200db8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              test.c
000000000000066a l     F .text	0000000000000029              _ZL3dfsi
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000008b4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000000748 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200dc8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200dc0 l       .init_array	0000000000000000              __init_array_end
0000000000200db8 l       .init_array	0000000000000000              __init_array_start
0000000000201000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000201030 g       .data	0000000000000000              _edata
0000000000201020  w      .data	0000000000000000              data_start
0000000000000740 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000693 g     F .text	0000000000000028              main
0000000000201028 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000734 g     F .fini	0000000000000000              _fini
0000000000000560 g     F .text	000000000000002b              _start
0000000000000518 g     F .init	0000000000000000              _init
0000000000201030 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000201020 g       .data	0000000000000000              __data_start
0000000000201038 g       .bss	0000000000000000              _end
0000000000201030 g       .bss	0000000000000000              __bss_start
00000000000006c0 g     F .text	0000000000000065              __libc_csu_init
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000000730 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable


